<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="ReelBox.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ReelBox"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    mc:Ignorable="d" Loaded="MainPage_OnLoaded" NavigationCacheMode="Enabled">
    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StringVisibilityConverter x:Key="StringVisibilityConverter"/>
        <converters:BoolToObjectConverter x:Key="SelectedToRemoveText" FalseValue="Remove all" TrueValue="Remove selected"/>
        <converters:BoolToObjectConverter x:Key="AllSelectedToSelectText" FalseValue="Select all" TrueValue="Deselect all"/>
        <converters:BoolToObjectConverter x:Key="MediumTemplateConverter" FalseValue="{StaticResource MediumTemplate}" TrueValue="{StaticResource MediumTemplateCompact}"/>
        <local:ImageUriConverter x:Key="ImageUriConverter"/>

        <DataTemplate x:Key="MediumTemplate" x:DataType="local:Medium">
            <RelativePanel Padding="10" BorderBrush="{ThemeResource TextFillColorPrimaryBrush}" BorderThickness="1"
                   Background="{ThemeResource MediumBackground}">
                <Grid x:Name="ThumbnailBox" Width="{x:Bind local:Processor.MaxThumbnailWidth}" Height="{x:Bind local:Processor.MaxThumbnailHeight}"
                      Background="Black" Margin="0,0,10,0" CornerRadius="{StaticResource OverlayCornerRadius}">
                    <Image Source="{x:Bind Details.ThumbnailPath, Mode=OneWay, Converter={StaticResource ImageUriConverter}}"
                           Visibility="{x:Bind Details.ThumbnailPath, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}"/>
                    <FontIcon Glyph="{x:Bind Icon}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="90"
                              Visibility="{x:Bind Details.ThumbnailPath, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}, ConverterParameter=True}"/>
                </Grid>
                <CheckBox x:Name="NameBox" RelativePanel.RightOf="ThumbnailBox" RelativePanel.AlignRightWithPanel="True" VerticalAlignment="Center"
                          Padding="10,0,0,0" VerticalContentAlignment="Center" IsChecked="{x:Bind IsSelected, Mode=TwoWay}">
                    <Grid ColumnSpacing="10" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <FontIcon Glyph="{x:Bind Icon}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Text="{x:Bind FileName}" Style="{StaticResource SubtitleTextBlockStyle}" LineHeight="17"
                                   ToolTipService.ToolTip="{x:Bind FilePath}"
                                   VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" LineStackingStrategy="BlockLineHeight"/>
                    </Grid>
                </CheckBox>
                <Grid RelativePanel.RightOf="ThumbnailBox" RelativePanel.Below="NameBox" RelativePanel.AlignRightWithPanel="True">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <ListView ItemsSource="{x:Bind ActionModels}" SelectionMode="None">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"></Setter>
                                    <Setter Property="MinWidth" Value="0"></Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="local:ActionModel">
                                    <Viewbox Height="80">
                                        <AppBarButton Label="{x:Bind Text}" Click="ActionClicked">
                                            <AppBarButton.Icon>
                                                <FontIcon Glyph="{x:Bind Icon}"/>
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </Viewbox>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <AppBarSeparator/>
                        <AppBarButton Label="Remove" Icon="Delete" Click="RemoveSingle_OnClick" VerticalAlignment="Center" Foreground="{ThemeResource SystemFillColorCriticalBrush}"/>
                    </StackPanel>
                </Grid>
                <TextBlock RelativePanel.Below="ThumbnailBox" RelativePanel.AlignHorizontalCenterWithPanel="True" Text="{x:Bind Details, Mode=OneWay}"
                           Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource CaptionTextBlockStyle}"
                           Visibility="{x:Bind Details, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}"
                           Margin="0,5,0,0"/>
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="MediumTemplateCompact" x:DataType="local:Medium">
            <Grid Height="50" BorderBrush="{ThemeResource TextFillColorPrimaryBrush}" BorderThickness="1" Background="{ThemeResource MediumBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox VerticalAlignment="Center" Padding="10,0,0,0" VerticalContentAlignment="Center"
                          IsChecked="{x:Bind IsSelected, Mode=TwoWay}" Margin="10,0,0,0">
                    <Grid ColumnSpacing="10" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <FontIcon Glyph="{x:Bind Icon}" FontSize="25" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Text="{x:Bind FileName}" FontSize="20" LineHeight="15" LineStackingStrategy="BlockLineHeight"
                                   VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" ToolTipService.ToolTip="{x:Bind FilePath}"/>
                    </Grid>
                </CheckBox>
                <CommandBar Grid.Column="1" DataContext="{x:Bind}" Loaded="FrameworkElement_OnLoaded"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid AllowDrop="True" Drop="MainPage_OnDrop" DragOver="MainPage_OnDragOver" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center">
        <RelativePanel Visibility="{x:Bind viewModel.HasMedia, Mode=OneWay}" Width="850">
            <ListView ItemsSource="{x:Bind viewModel.Media}" SelectionMode="None" Margin="0,10" 
                      ItemTemplate="{x:Bind viewModel.InCompactMode, Mode=OneWay, Converter={StaticResource MediumTemplateConverter}}"
                      RelativePanel.Above="ButtonsGrid" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Padding" Value="0"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <Grid x:Name="ButtonsGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox VerticalAlignment="Center" IsChecked="{x:Bind viewModel.InCompactMode, Mode=TwoWay}" Content="Compact"/>
                <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="10" HorizontalAlignment="Right">
                    <Button Click="ShowFilePicker">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <SymbolIcon Symbol="Upload" />
                            <TextBlock HorizontalTextAlignment="Center">Add media</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Click="RemoveMedia">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <SymbolIcon Symbol="Delete" Foreground="{ThemeResource SystemFillColorCriticalBrush}"/>
                            <TextBlock HorizontalTextAlignment="Center" Text="{x:Bind viewModel.HasSelected, Mode=OneWay, Converter={StaticResource SelectedToRemoveText}}"/>
                        </StackPanel>
                    </Button>
                    <Button Click="MixSelected_OnClick" Visibility="{x:Bind viewModel.HasSelected, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <SymbolIcon Symbol="Cut" />
                            <TextBlock HorizontalTextAlignment="Center">Mix selected</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Click="MergeSelected_OnClick" Visibility="{x:Bind viewModel.HasSelected, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <FontIcon Glyph="&#xF5A9;" />
                            <TextBlock HorizontalTextAlignment="Center">Merge selected</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Click="SelectAll_OnClick">
                        <StackPanel Orientation="Horizontal" Spacing="10">
                            <SymbolIcon Symbol="SelectAll" />
                            <TextBlock HorizontalTextAlignment="Center" Text="{x:Bind viewModel.AllAreSelected, Mode=OneWay, Converter={StaticResource AllSelectedToSelectText}}"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </RelativePanel>
        <Grid Visibility="{x:Bind viewModel.HasMedia, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"
              BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}" BorderThickness="2"
              CornerRadius="{StaticResource OverlayCornerRadius}" Width="500" Height="500" Background="Transparent">
            <Button Padding="10" Click="ShowFilePicker" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <Viewbox MaxWidth="100" Margin="10">
                        <SymbolIcon Symbol="Upload" />
                    </Viewbox>
                    <TextBlock HorizontalTextAlignment="Center" Style="{StaticResource BaseTextBlockStyle}">Add media</TextBlock>
                </StackPanel>
            </Button>
        </Grid>
        <ContentDialog Name="ErrorDialog" IsPrimaryButtonEnabled="True" PrimaryButtonText="Ok"/>
    </Grid>
</Page>
